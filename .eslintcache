[{"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/index.js":"1","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/App.js":"2","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Services-list/Service-card.js":"3","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Services-list/Services-list.js":"4","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/services/services.service.js":"5","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Service-details/Service-details.js":"6","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/index/Home.js":"7","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Signup/Signup.js":"8","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/services/auth.service.js":"9","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Login/Login.js":"10","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/layout/Navbar/Navbar.js":"11","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/services/users.service.js":"12","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/shared/Alert/Alert.js":"13","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/shared/Popup/Popup.js":"14","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Services-list/Service-form.js":"15","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Service-details/Contact-form.js":"16","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/services/upload.service.js":"17","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Services-list/Filter.js":"18","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/User-details/User-details.js":"19","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/shared/Dictaphone/Dictaphone.js":"20","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Profile/Edit-user/Edit-profile.js":"21","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Profile/Owned-services/Owned-services.js":"22","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Profile/Edit-service/Edit-service.js":"23","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Service-form/New-service.js":"24","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Services-list/SituationFilter.js":"25","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/User-details/User-Map.js":"26","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/User-details/Marker.js":"27","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Signup/Autocomplete.js":"28","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/layout/Footer/Footer.js":"29"},{"size":297,"mtime":1610320088837,"results":"30","hashOfConfig":"31"},{"size":3195,"mtime":1615562781898,"results":"32","hashOfConfig":"31"},{"size":8506,"mtime":1615398016881,"results":"33","hashOfConfig":"31"},{"size":5507,"mtime":1615467645337,"results":"34","hashOfConfig":"31"},{"size":1101,"mtime":1615506041027,"results":"35","hashOfConfig":"31"},{"size":6767,"mtime":1614986662947,"results":"36","hashOfConfig":"31"},{"size":1112,"mtime":1615554213338,"results":"37","hashOfConfig":"31"},{"size":12931,"mtime":1615478132570,"results":"38","hashOfConfig":"31"},{"size":538,"mtime":1615506136400,"results":"39","hashOfConfig":"31"},{"size":3251,"mtime":1615165765766,"results":"40","hashOfConfig":"31"},{"size":7157,"mtime":1615164724708,"results":"41","hashOfConfig":"31"},{"size":891,"mtime":1615504711013,"results":"42","hashOfConfig":"31"},{"size":720,"mtime":1613469180667,"results":"43","hashOfConfig":"31"},{"size":420,"mtime":1611503129009,"results":"44","hashOfConfig":"31"},{"size":3896,"mtime":1615480847616,"results":"45","hashOfConfig":"31"},{"size":3355,"mtime":1615166001236,"results":"46","hashOfConfig":"31"},{"size":355,"mtime":1615506086611,"results":"47","hashOfConfig":"31"},{"size":3617,"mtime":1613830077562,"results":"48","hashOfConfig":"31"},{"size":2278,"mtime":1615390429382,"results":"49","hashOfConfig":"31"},{"size":3005,"mtime":1615311966603,"results":"50","hashOfConfig":"31"},{"size":12023,"mtime":1615392041357,"results":"51","hashOfConfig":"31"},{"size":3005,"mtime":1614602161747,"results":"52","hashOfConfig":"31"},{"size":6610,"mtime":1615395591480,"results":"53","hashOfConfig":"31"},{"size":4728,"mtime":1615479767890,"results":"54","hashOfConfig":"31"},{"size":829,"mtime":1613831311056,"results":"55","hashOfConfig":"31"},{"size":1025,"mtime":1615383454986,"results":"56","hashOfConfig":"31"},{"size":460,"mtime":1615383443734,"results":"57","hashOfConfig":"31"},{"size":2950,"mtime":1615376356730,"results":"58","hashOfConfig":"31"},{"size":594,"mtime":1615563325040,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"42rp7a",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/index.js",[],["127","128"],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/App.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Services-list/Service-card.js",["129","130","131","132"],"import { Col, Card, Button, Accordion, Row } from 'react-bootstrap'\nimport { useState, useEffect } from 'react'\nimport './Service-card.css'\nimport { Link, useHistory } from 'react-router-dom'\nimport arrow from './proximo.png'\nimport swal from 'sweetalert'\nimport ServicesService from \"./../../../services/services.service\"\nimport UsersService from './../../../services/users.service'\nimport heart from './heart.png'\nimport redHeart from './red-heart.png'\nimport pencil from './lapiz.png'\nimport bin from './eliminar.png'\nimport trophy from './trophy.png'\n\n\nconst ServiceCard = ({ name, _id, reward, owner, situation, loggedUser, refreshPage, classCard }) => {\n\n    const servicesService = new ServicesService();\n    const usersService = new UsersService()\n    const history = useHistory()\n\n\n    const deleteTheService = () => {\n\n        servicesService\n            .deleteService(_id)\n            .then(() => {\n                // history.push('/servicios')\n                setTimeout(function () { history.go() }, 800) //history.go() refreshes the current page\n            })\n            .catch(err => console.log(err))\n    }\n\n    const confirmDelete = () => {\n        swal({\n            title: \"Mensaje de confirmación\",\n            text: \"¿Estás segur@ de que quieres eliminar esta publicación?\",\n            icon: \"warning\",\n            buttons: [\"No\", \"Sí\"]\n        })\n            .then(answer => {\n\n                if (answer) {\n                    deleteTheService()\n                    swal({\n                        text: \"Publicación eliminada con éxito\",\n                        icon: \"success\"\n                    })\n                }\n            })\n    }\n\n    // const [services, setServices] = useState({$services: []})\n\n    // const refreshServices = () => {\n    //     servicesService\n    //         .getServices()\n    //         .then(res => {\n    //             console.log(res)\n    //             setServices( {`${services}`: res.data} )\n    //         })\n    //         .catch(err => console.log(err))\n    // }\n\n    const saveService = (/*props*/) => {\n\n        const user_id = loggedUser._id\n\n        usersService\n            .saveService(_id, user_id)\n            // .then(() => props.refreshPage())\n            .then(() => history.go())\n            .catch(err => console.log(err))\n    }\n\n    const removeService = (/*props*/) => {\n\n        const user_id = loggedUser._id\n\n        usersService\n            .removeService(_id, user_id)\n            // .then(() => props.refreshPage())\n            .then(() => history.go())\n            .catch(err => console.log(err))\n    }\n\n\n    const deleteServiceWithoutOwner = () => {\n        servicesService\n            .deleteService(_id)\n            .then((res) => {\n                history.go()\n            })\n    }\n    // const saveRemove = () => {\n    //     removeService()\n    //     setisAdded(!isAdded)\n    //     console.log(isAdded)\n    // }\n\n    return (\n        <Col className={classCard} md={{ span: 8, offset: 2 }}>\n            {/* {console.log(owner)} */}\n            <Card className=\"service-card text-center\">\n                <Row className=\"no-gutters\">\n                    <Col md=\"4\">\n                        <div className=\"img-div\">\n                            <Card.Img top variant=\"top\" src={owner ? owner.image : <></>} />\n                            {/* {owner ? //esto se pone porque como tengo algunos creados del seed sin owner, para que separarlos de los que sí tienen */}\n                            <>\n                            </>\n                            <Card.Text className=\"card-name\">{owner ? owner.username : deleteServiceWithoutOwner()}, {owner && owner.province}</Card.Text>\n                            <Card.Text className={situation === 'Pendiente de ayuda' ? \"card-situation\" : situation === 'En conversaciones' ? \"card-situation3\" : situation === 'Ayuda recibida' ? \"card-situation2\" : null}>{situation}</Card.Text>\n                            {/* :\n                            <><p>nombre</p></>\n                        } */}\n                        </div>\n                    </Col>\n                    <Col md=\"8\">\n\n                        <Card.Body className=\"card-style\">\n                            <Card.Title><h3>{name}\n                                {\n                                    loggedUser && loggedUser._id === owner._id\n                                        ?\n                                        <>\n                                            <Link /*className=\"btn btn-info btn-sm card-edit-button\"*/ style={{ float: 'left' }} to={`/editar-servicio/${_id}`}><img\n                                                alt=\"Icono de editar publicación\"\n                                                src={pencil}\n                                                style={{ height: '25px', width: '25px' }}\n                                                className=\"button-card-img\"\n                                            /></Link>\n\n                                            <Link /*className=\"btn btn-info btn-sm card-delete-button\"*/ style={{ float: 'right' }} onClick={() => confirmDelete()}><img\n                                                alt=\"Icono de eliminar publicación\"\n                                                src={bin}\n                                                style={{ height: '25px', width: '25px' }}\n                                            // className=\"button-card-img\"\n                                            /></Link>\n                                        </>\n                                        :\n                                        !loggedUser\n                                            ?\n                                            null\n                                            :\n                                            <Link className=\"fav-button\" onClick={!loggedUser.savedServices.includes(_id) ? () => saveService() : () => removeService()}/*isAdded ? () => removeService() : () => saveService()} /*className={!loggedUser.savedServices.includes(_id)? \"white-button\" : \"red-button\"}*/ style={{ float: 'left' }} size=\"sm\">\n                                                {!loggedUser.savedServices.includes(_id) ? /*\"Añadir a favs\"*/ <img src={heart} alt=\"Añadir a favs\" style={{ height: '25px', width: '25px' }} /> : /*\"Quitar de favs\"*/ < img src={redHeart} alt=\"Quitar de favs\" style={{ height: '25px', width: '25px' }} />}\n                                            </Link>\n                                }\n                            </h3>\n                            </Card.Title>\n                            {\n                                loggedUser && loggedUser._id === owner._id\n                                    ?\n                                    // <Link className=\"btn btn-dark btn-block btn-sm\" to=\"/editar-perfil\">Editar</Link>\n                                    <>\n                                    </>\n                                    :\n                                    <div className=\"button-position\">\n                                        {\n                                            situation === \"Ayuda recibida\"\n                                                ?\n                                                null\n                                                :\n                                                <Link className=\"btn btn-light btn-sm card-button\" to={`/servicios/${_id}`}>\n                                                    <img\n                                                        alt=\"Imagen de usuario\"\n                                                        src={arrow}\n                                                        className=\"arrow-button\"\n                                                    /></Link>\n                                        }\n                                    </div>\n                            }\n                            <hr />\n                            <Card.Text><b className=\"rewardWord\"><img\n                                alt=\"Icono de editar publicación\"\n                                src={trophy}\n                                style={{ height: '25px', width: '25px', marginBottom: '10px' }}\n                                className=\"button-card-img\"\n                            /> Recompensa:</b> {reward}</Card.Text>\n                        </Card.Body>\n                    </Col>\n                </Row>\n            </Card>\n        </Col>\n    )\n}\n\nexport default ServiceCard","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Services-list/Services-list.js",["133"],"import React, { Component } from \"react\"\nimport ServicesService from \"./../../../services/services.service\"\n// import UsersService from './../../../services/users.service'\nimport { Container, Row, Button, Spinner, Col, Accordion, AccordionCollapse } from \"react-bootstrap\"\nimport Alert from './../../shared/Alert/Alert'\nimport Popup from './../../shared/Popup/Popup'\nimport ServiceCard from './Service-card'\nimport ServiceForm from './Service-form'\nimport './Services-list.css'\nimport { Link } from 'react-router-dom'\nimport Filter from './Filter'\nimport SituationFilter from './SituationFilter'\n\n\nclass ServicesList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            services: [],\n            showModal: false,\n            showToast: false,\n            toastText: '',\n            isServiceLoaded: false,\n            classCard: /*'hidden'*/ 'card-div'\n        };\n        this.servicesService = new ServicesService();\n        // this.usersService = new UsersService();\n    }\n\n    componentDidMount = () => {\n        this.refreshServices()\n        window.onscroll = () => this.handleAnimation();\n    }\n    refreshServices = () => {\n        this.servicesService\n            .getServices()\n            .then(res => {\n                // console.log(res)\n                this.setState({ services: res.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleModal = visible => this.setState({ showModal: visible })\n    handleToast = (visible, text) => this.setState({ showToast: visible, toastText: text })\n\n    filterByProvince = (province) => {\n        if (province === 'all') this.refreshServices()\n        else {\n            this.servicesService\n                .filterByProvince(province)\n                .then((res) => this.setState({ services: res.data, isServiceLoaded: true }))\n                .catch((err) => console.log(err))\n        }\n    };\n\n    filterBySituation = (situation) => {\n        if (situation === 'all') this.refreshServices()\n        else {\n            this.servicesService\n                .filterBySituation(situation)\n                .then((res) => this.setState({ services: res.data, isServiceLoaded: true }))\n                .catch((err) => console.log(err))\n        }\n    };\n\n    handleAnimation = () => {\n        if (document.documentElement.scrollTop > 50) {\n            this.setState({ classCard: 'card-div' });\n        };\n    }\n\n    render() {\n        return (\n            <section className=\"services-list\">\n                {/* <Parallax strength={300}>\n                    <Background className=\"custom-bg\">\n                        <img src={bgImage} alt=\"fill murray\" />\n                    </Background>\n                </Parallax> */}\n                <Container className=\"list-container\">\n                    <Col className=\"text-center\">\n\n                        {!this.props.loggedUser && <Link to=\"/iniciar-sesion\" className=\"btn main-button btn-light list-button\">Pedir ayuda</Link>}\n                        {this.props.loggedUser && <Button className=\"main-button btn-light list-button\" onClick={() => this.handleModal(true)} >Pedir ayuda</Button>}\n                        <Accordion className=\"filter-button\">\n                            <Accordion.Toggle as={Button} className=\"main-button btn-light list-button\" eventKey=\"0\">\n                                Filtro\n                                </Accordion.Toggle>\n                            <AccordionCollapse eventKey=\"0\">\n                                <Filter filterByOwnerProvince={this.filterByProvince} />\n                            </AccordionCollapse>\n                            {/* <AccordionCollapse eventKey=\"0\">\n                                <SituationFilter filterBySituation={this.filterBySituation} />\n                            </AccordionCollapse> */}\n                        </Accordion>\n                    </Col>\n                    {this.state.services.length > 0\n                        ?\n                        <Row>\n                            {this.state.services.map((elm) => <ServiceCard key={elm._id} {...elm} loggedUser={this.props.loggedUser} {...this.props} classCard={this.state.classCard}/*refreshPage={this.refreshServices}*/ />)}\n                        </Row>\n                        :\n                        <Row>\n                            <Col className=\"text-center\">\n                                {this.state.services.length === 0 && this.state.isServiceLoaded ? <Col md={{ span: 5, offset: 4 }}><p style={{ marginTop: '20px', color: 'black', border: '1px solid', backgroundColor: 'white', borderRadius: '5px' }}>No hay resultados para esta búsqueda</p></Col>\n                                    :\n                                    <Spinner animation=\"border\" variant=\"light\" style={{ marginTop: '20px' }} />\n                                }\n                            </Col>\n                        </Row>\n                    }\n                </Container>\n\n                <Popup show={this.state.showModal} handleModal={this.handleModal} title=\"Nueva petición\">\n                    <ServiceForm handleToast={this.handleToast} closeModal={() => this.handleModal(false)} updateList={this.refreshServices} loggedUser={this.props.loggedUser} />\n                </Popup>\n\n                <Alert className=\"service-added\" show={this.state.showToast} handleToast={this.handleToast} toastText={this.state.toastText} />\n            </section>\n        )\n    }\n\n}\n\nexport default ServicesList","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/services/services.service.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Service-details/Service-details.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/index/Home.js",["134"],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Signup/Signup.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/services/auth.service.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Login/Login.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/layout/Navbar/Navbar.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/services/users.service.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/shared/Alert/Alert.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/shared/Popup/Popup.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Services-list/Service-form.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Service-details/Contact-form.js",["135"],"import React, { Component } from 'react';\nimport { Form, Col, Button, Row } from 'react-bootstrap'\n// import MailService from './../../../service/mail.service'\nimport swal from 'sweetalert'\n// import { useHistory } from 'react-router-dom'\n\nclass ContactForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            contactEmail: this.props.contactUser.email,\n            contactName: this.props.contactUser.name,\n            name: this.props.loggedUser.name,\n            subject: `${this.props.loggedUser.name} quiere ayudarle con: ${this.props.serviceName}`,\n            message: ''\n        }\n        // this.mailService = new MailService()\n    }\n\n\n    // handleSubmit = e => {\n    //     e.preventDefault()\n    //     this.mailService.sendMail(this.state)\n    //         .then((response) => {\n    //             if (response.data.status === 'success') {\n    //                 alert(\"Message Sent.\");\n    //                 this.resetForm()\n    //             } else if (response.data.status === 'fail') {\n    //                 alert(\"Message failed to send.\")\n    //             }\n    //         })\n    // }\n\n    resetForm() {\n        this.setState({ name: '', contactEmail: '', message: '' })\n    }\n\n    confirmMessage = () => {\n        swal({\n            title: \"Mensaje enviado con éxito\",\n            icon: \"success\",\n        })\n        // .then(() => {\n        //   const history = useHistory()\n        //   history.push('/')\n        // })\n    }\n\n    handleInputChange = e => this.setState({ [e.target.name]: e.target.value })\n\n\n    render() {\n        return (\n            <section>\n                {/* <Row>\n                    <Col md={{ span: 6, offset: 3 }}>\n                        <h3>Contacta con {this.state.contactName}</h3>\n                    </Col>\n                </Row> */}\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridName\">\n                            <Form.Label>De</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter name\" name=\"name\" readOnly value={this.state.name} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\n                            <Form.Label>Para</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter email\" name=\"contactEmail\" readOnly value={this.state.contactEmail} />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group controlId=\"formGridSubject\">\n                        <Form.Label>Asunto</Form.Label>\n                        <Form.Control type=\"text\" name=\"subject\" value={this.state.subject} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formGridAddress2\">\n                        <Form.Label>Mensaje</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} name=\"message\" value={this.state.message} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    <Button className=\"main-button btn-light\" type=\"submit\" onClick={this.confirmMessage}>Contactar</Button>\n                </Form>\n            </section>\n        )\n    }\n}\n\nexport default ContactForm","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/services/upload.service.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Services-list/Filter.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/User-details/User-details.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/shared/Dictaphone/Dictaphone.js",["136"],"// import React from 'react'\n// import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\n\n// const Dictaphone = (props) => {\n//     const { transcript, resetTranscript } = useSpeechRecognition()\n\n//     if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n//         return null\n//     }\n\n//     return (\n//         <div>\n//             <button onClick={SpeechRecognition.startListening}>Start</button>\n//             <button onClick={SpeechRecognition.stopListening}>Stop</button>\n//             <button onClick={resetTranscript}>Reset</button>\n//             <p>{props.transcript}</p>\n//         </div>\n//     )\n// }\n// export default Dictaphone\n\nimport React, { useState, useEffect } from 'react'\n\nconst SpeechRecognition =\n    window.SpeechRecognition || window.webkitSpeechRecognition\nconst mic = new SpeechRecognition()\n\nmic.continuous = true\nmic.interimResults = true\nmic.lang = 'es-ES'\n\nfunction Dictaphone() {\n    const [isListening, setIsListening] = useState(false)\n    const [note, setNote] = useState(null)\n    const [savedNotes, setSavedNotes] = useState([])\n\n    useEffect(() => {\n        handleListen()\n    }, [isListening])\n\n    const handleListen = () => {\n        if (isListening) {\n            mic.start()\n            mic.onend = () => {\n                console.log('continue..')\n                mic.start()\n            }\n        } else {\n            mic.stop()\n            mic.onend = () => {\n                console.log('Stopped Mic on Click')\n            }\n        }\n        mic.onstart = () => {\n            console.log('Mics on')\n        }\n\n        mic.onresult = event => {\n            const transcript = Array.from(event.results)\n                .map(result => result[0])\n                .map(result => result.transcript)\n                .join('')\n            console.log(transcript)\n            setNote(transcript)\n            mic.onerror = event => {\n                console.log(event.error)\n            }\n        }\n    }\n\n    const handleSaveNote = () => {\n        setSavedNotes([...savedNotes, note])\n        setNote('')\n    }\n\n    return (\n        <>\n            {/* <h1>Voice Notes</h1> */}\n            <div className=\"container\">\n                <div className=\"box\">\n                    <h2>Mensaje de voz</h2>\n                    {isListening ? <span>🎙️</span> : <span>🛑🎙️</span>}\n                    <button onClick={handleSaveNote} disabled={!note}>\n                        Confirmar mensaje\n          </button>\n                    <button onClick={() => setIsListening(prevState => !prevState)}>\n                        {isListening ? \"Detener\" : \"Grabar\"}\n\n          </button>\n                    <p>{note}</p>\n                </div>\n                <div className=\"box\">\n                    <h2>Mensajes guardados</h2>\n                    {savedNotes.map(n => (\n                        <p key={n}>{n}</p>\n                    ))}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Dictaphone","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Profile/Edit-user/Edit-profile.js",["137","138"],"import React, { Component } from \"react\"\nimport UsersService from \"../../../../services/users.service\"\nimport Alert from './../../../shared/Alert/Alert'\nimport FilesService from \"./../../../../services/upload.service\"\nimport LocationSearchInput from \"./../../Signup/Autocomplete\";\n\n\n\nimport \"./Edit-profile.css\";\n\nimport { Container, Row, Col, Form, Button, Spinner } from \"react-bootstrap\";\n\nclass EditForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: this.props.user.username,\n            name: this.props.user.name,\n            // description: this.props.user.description,\n            province: this.props.user.province,\n            age: this.props.user.age,\n            email: this.props.user.email,\n            image: this.props.user.image,\n            location: this.props.user.location,\n            showToast: false,\n            toastText: \"\",\n            uploadingActive: false\n        };\n        this.usersService = new UsersService();\n        this.filesService = new FilesService();\n    }\n\n    handleInputChange = (e) => this.setState({ [e.target.name]: e.target.value })\n\n    handleToast = (visible, text) => this.setState({ showToast: visible, toastText: text })\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.usersService\n            .updateUser(this.props.user._id, this.state)\n            .then((theLoggedInUser) => {\n                this.props.storeUser(theLoggedInUser.data);\n                this.props.history.push(\"/editar-perfil\");\n                this.handleToast(true, '¡Cambios guardados!')\n            })\n            .catch((err) => console.log(\"Error\", err));\n    };\n\n    handleImageUpload = (e) => {\n        const uploadData = new FormData();\n        uploadData.append(\"image\", e.target.files[0]);\n        console.log(\"ESTO ES UNA IMAGEN EN MEMORIA:\", e.target.files[0]);\n\n        this.setState({ uploadingActive: true });\n\n        this.filesService\n            .uploadImage(uploadData)\n            .then((response) => {\n                console.log(response)\n                this.setState({\n                    ...this.state.user, image: response.data.secure_url, uploadingActive: false,\n                },\n\n                );\n            })\n            .catch((err) => console.log(\"ERRORRR!\", err));\n    };\n\n    setLocation = (newCoordinates) => {\n        const newLocation = { type: \"Point\", coordinates: newCoordinates }\n        this.setState({ user: { ...this.state.user, location: newLocation } })\n    }\n\n    render() {\n        return (\n            <section className=\"edit\">\n                <Container>\n                    <Row>\n                        <Col md={{ span: 6, offset: 3 }}>\n                            <h1>Editar perfil</h1>\n                            <hr />\n                            <Form onSubmit={this.handleSubmit}>\n                                <Form.Group controlId=\"username\">\n                                    <Form.Label>Nombre de usuario</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.handleInputChange}\n                                    />\n                                </Form.Group>\n                                <Form.Group controlId=\"name\">\n                                    <Form.Label>Nombre y apellidos</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"name\"\n                                        value={this.state.name}\n                                        onChange={this.handleInputChange}\n                                    />\n                                </Form.Group>\n                                <Form.Group controlId=\"email\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control\n                                        type=\"email\"\n                                        name=\"email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange}\n                                    />\n                                </Form.Group>\n\n                                {/* <Form.Group controlId=\"description\">\n                                    <Form.Label>Descripción</Form.Label>\n                                    <Form.Control\n                                        as=\"textarea\"\n                                        rows={3}\n                                        type=\"text\"\n                                        name=\"description\"\n                                        value={this.state.description}\n                                        onChange={this.handleInputChange}\n                                    />\n                                </Form.Group> */}\n                                <Form.Group controlId=\"province\">\n                                    <Form.Label>Provincia</Form.Label>\n                                    <Form.Control\n                                        as=\"select\"\n                                        name=\"province\"\n                                        value={this.state.province}\n                                        onChange={this.handleInputChange}\n                                    >\n                                        <option value=\"\">Seleccionar</option>\n                                        <option value=\"Álava\">Álava</option>\n                                        <option value=\"Albacete\">Albacete</option>\n                                        <option value=\"Alicante\">Alicante</option>\n                                        <option value=\"Almería\">Almería</option>\n                                        <option value=\"Asturias\">Asturias</option>\n                                        <option value=\"Ávila\">Ávila</option>\n                                        <option value=\"Badajoz\">Badajoz</option>\n                                        <option value=\"Baleares\">Baleares</option>\n                                        <option value=\"Barcelona\">Barcelona</option>\n                                        <option value=\"Burgos\">Burgos</option>\n                                        <option value=\"Cáceres\">Cáceres</option>\n                                        <option value=\"Cádiz\">Cádiz</option>\n                                        <option value=\"Cantabria\">Cantabria</option>\n                                        <option value=\"Castellón\">Castellón</option>\n                                        <option value=\"Ceuta\">Ceuta</option>\n                                        <option value=\"Ciudad Real\">Ciudad Real</option>\n                                        <option value=\"Córdoba\">Córdoba</option>\n                                        <option value=\"Cuenca\">Cuenca</option>\n                                        <option value=\"Gerona/Girona\">Gerona/Girona</option>\n                                        <option value=\"Granada\">Granada</option>\n                                        <option value=\"Guadalajara\">Guadalajara</option>\n                                        <option value=\"Guipúzcoa\">Guipúzcoa</option>\n                                        <option value=\"Huelva\">Huelva</option>\n                                        <option value=\"Huesca\">Huesca</option>\n                                        <option value=\"Jaén\">Jaén</option>\n                                        <option value=\"La Coruña\">La Coruña</option>\n                                        <option value=\"La Rioja\">La Rioja</option>\n                                        <option value=\"Las Palmas\">Las Palmas</option>\n                                        <option value=\"León\">León</option>\n                                        <option value=\"Lérida\">Lérida/Lleida</option>\n                                        <option value=\"Lugo\">Lugo</option>\n                                        <option value=\"Madrid\">Madrid</option>\n                                        <option value=\"Málaga\">Málaga</option>\n                                        <option value=\"Melilla\">Melilla</option>\n                                        <option value=\"Murcia\">Murcia</option>\n                                        <option value=\"Navarra\">Navarra</option>\n                                        <option value=\"Orense\">Orense/Ourense</option>\n                                        <option value=\"Palencia\">Palencia</option>\n                                        <option value=\"Pontevedra\">Pontevedra</option>\n                                        <option value=\"Salamanca\">Salamanca</option>\n                                        <option value=\"Segovia\">Segovia</option>\n                                        <option value=\"Sevilla\">Sevilla</option>\n                                        <option value=\"Soria\">Soria</option>\n                                        <option value=\"Tarragona\">Tarragona</option>\n                                        <option value=\"Tenerife\">Tenerife</option>\n                                        <option value=\"Teruel\">Teruel</option>\n                                        <option value=\"Toledo\">Toledo</option>\n                                        <option value=\"Valencia\">Valencia</option>\n                                        <option value=\"Valladolid\">Valladolid</option>\n                                        <option value=\"Vizcaya\">Vizcaya/Bizkaia</option>\n                                        <option value=\"Zamora\">Zamora</option>\n                                        <option value=\"Zaragoza\">Zaragoza</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                {/* <Form.Group>\n                                    <Form.Label>Localidad</Form.Label>\n                                    <LocationSearchInput setLocation={this.setLocation} />\n                                </Form.Group> */}\n                                <Form.Group controlId=\"age\">\n                                    <Form.Label>Edad</Form.Label> <small>(Mínimo 16 años)</small>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"age\"\n                                        value={this.state.age}\n                                        onChange={this.handleInputChange}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>\n                                        Imagen {this.state.uploadingActive && <Spinner />} <br />\n                                        <img src={this.state.image} style={{ height: '200px', objectFit: 'cover' }} />\n                                    </Form.Label>\n                                    <Form.Control type=\"file\" onChange={this.handleImageUpload} />\n                                </Form.Group>\n\n                                <Button type=\"submit\" className=\"btn-sm edit-button\" disabled={this.state.uploadingActive}>\n                                    {this.state.uploadingActive ? <><p style={{ margin: '0 auto' }}>Subiendo imagen <Spinner variant=\"light\" size=\"sm\" animation=\"border\" style={{ marginBottom: '2px' }} /></p> </> : \"Guardar cambios\"}\n                                </Button>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n                <Alert show={this.state.showToast} handleToast={this.handleToast} toastText={this.state.toastText} />\n            </section>\n        );\n    }\n}\n\nexport default EditForm;\n","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Profile/Owned-services/Owned-services.js",["139","140"],"import React, { Component } from 'react'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\n// import \"./Profile.css\"\nimport { Link } from 'react-router-dom'\nimport ServiceService from '../../../../services/services.service';\nimport ServiceCard from '../../Services-list/Service-card'\nimport './Owned-services.css'\n\n\nclass OwnedServices extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            owned: [],\n            favs: []\n        }\n        this.servicesService = new ServiceService()\n    }\n\n    componentDidMount = () => {\n        this.servicesService\n            .getAllServicesFromUser(this.props.loggedUser._id)\n            .then(res => {\n                console.log(res)\n                this.setState({ owned: res.data.owned, favs: res.data.favs })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    {/* <Col md={{ span: 8, offset: 2 }}> */}\n                    <Col md={12}>\n\n                        <h2 className=\"owned-title text-center\">Mis publicaciones creadas</h2>\n                        {\n                            this.state.owned.length > 0\n                                ?\n                                <Row>\n                                    <Col>\n                                        {this.state.owned.map(elm => <ServiceCard key={elm._id} {...elm} loggedUser={this.props.loggedUser} />)} {/*<Button onClick={this.confirmDelete()}>Eliminar</Button>*/}\n                                    </Col>\n                                </Row>\n                                :\n                                <Row>\n                                    <Col className=\"text-center\">\n                                        <p>Ninguna petición de ayuda publicada</p>\n                                    </Col>\n                                </Row>\n                        }\n                        <hr />\n                    </Col>\n\n                    <Col md={12}>\n                        <h2 className=\"owned-title text-center\">Mis favoritas</h2>\n                        {\n                            this.state.favs.length > 0\n                                ?\n                                <Row>\n                                    <Col>\n                                        {this.state.favs.map(elm => <ServiceCard key={elm._id} {...elm} loggedUser={this.props.loggedUser} />)}\n                                    </Col>\n                                </Row>\n                                :\n                                <Row>\n                                    <Col className=\"text-center\">\n                                        <p>Ningún elemento guardado</p>\n                                    </Col>\n                                </Row>\n                        }\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n}\n\n\nexport default OwnedServices","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Profile/Edit-service/Edit-service.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Service-form/New-service.js",["141","142"],"import React, { Component } from 'react'\nimport ServicesService from '../../../services/services.service'\nimport FilesService from './../../../services/upload.service'\nimport Dictaphone from './../../shared/Dictaphone/Dictaphone'\n// import { useHistory } from 'react-router-dom'\nimport { Form, Button, Container, Spinner } from 'react-bootstrap'\nimport Alert from './../../shared/Alert/Alert'\nimport './New-service.css'\nimport unknownReward from './unknown-reward.png'\n\n\nclass CreateService extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            service: {\n                name: '',\n                description: '',\n                reward: '',\n                rewardImage: unknownReward,\n                owner: this.props.loggedUser ? this.props.loggedUser._id : ''\n            },\n            uploadingActive: false,\n            showToast: false,\n            toastText: \"\"\n        }\n        this.servicesService = new ServicesService()\n        this.filesService = new FilesService()\n    }\n\n    handleInputChange = e => this.setState({ service: { ...this.state.service, [e.target.name]: e.target.value } })\n\n    handleToast = (visible, text) => this.setState({ showToast: visible, toastText: text })\n\n    redirectToServices = () => {\n        { this.props.history.push('/servicios') }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.servicesService\n            .saveService(this.state.service)\n            .then(res => {\n                this.handleToast(true, '¡Petición de ayuda creada!')\n                // this.props.history.push('/servicios')\n                setTimeout(() => this.redirectToServices(), 800)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    handleImageUpload = e => {\n\n        const uploadData = new FormData()\n        uploadData.append('image', e.target.files[0])\n        console.log('ESTO ES UNA IMAGEN EN MEMORIA:', e.target.files[0])\n\n        this.setState({ uploadingActive: true })\n\n        this.filesService\n            .uploadImage(uploadData)\n            .then(response => {\n                this.setState({\n                    service: { ...this.state.service, rewardImage: response.data.secure_url },\n                    uploadingActive: false\n                })\n            })\n            .catch(err => console.log('ERRORRR!', err))\n    }\n\n\n    render() {\n\n        return (\n            <section className=\"newService-bg\">\n                <Container>\n                    <h2>Pedir ayuda</h2>\n                    <hr />\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group controlId=\"title\">\n                            <Form.Label>¿Qué necesita?</Form.Label>\n                        {/* <Dictaphone transcript={<input value={this.state.service.name}></input>}/> */}\n                            <Form.Control required type=\"text\" placeholder=\"Ej.: Necesito que me traigan la compra a casa, gracias.\" name=\"name\" value={this.state.service.name} onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"description\">\n                            <Form.Label>Descripción</Form.Label>\n                            <Form.Control as=\"textarea\" required rows={3} type=\"text\" placeholder=\"Ej.: No puedo cargar peso y las bolsas pesan demasiado para mí.\" name=\"description\" value={this.state.service.description} onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"reward\">\n                            <Form.Label>Recompensa</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"Ej.: Pastel casero.\" name=\"reward\" value={this.state.service.reward} onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Imagen de la recompensa {this.state.uploadingActive && <Spinner />}</Form.Label>\n                            <Form.Control type=\"file\" onChange={this.handleImageUpload} />\n                        </Form.Group>\n                        <Button className=\"edit-button\" size=\"sm\" type=\"submit\" disabled={this.state.uploadingActive}>{this.state.uploadingActive ? <><p style={{ margin: '0 auto' }}>Subiendo imagen <Spinner variant=\"light\" size=\"sm\" animation=\"border\" style={{ marginBottom: '2px' }} /></p> </> : 'Publicar'}</Button>\n                    </Form>\n                    <Alert className=\"service-added\" show={this.state.showToast} handleToast={this.handleToast} toastText={this.state.toastText} />\n                </Container>\n            </section>\n        )\n    }\n}\n\nexport default CreateService","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Services-list/SituationFilter.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/User-details/User-Map.js",["143"],"import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport Marker from './Marker'\n\nclass UserMap extends Component {\n    constructor(props) {\n        super(props)\n    }\n    static defaultProps = {\n\n        zoom: 8\n    }\n\n    render() {\n        return (\n            <div style={{ height: '400px', width: '100%' }}>\n                <GoogleMapReact\n                    bootstrapURLKeys={{ key: process.env.REACT_APP_API_KEY }}\n                    defaultCenter={{\n                        lat: this.props.user.location.coordinates[0],\n                        lng: this.props.user.location.coordinates[1]\n                    }}\n                    defaultZoom={this.props.zoom}\n                >\n                    <Marker lat={this.props.user.location.coordinates[0]} lng={this.props.user.location.coordinates[1]} name={this.props.user.name} id={this.props.user._id} age={this.props.user.age} />\n\n                </GoogleMapReact>\n            </div>\n        );\n    }\n}\n\nexport default UserMap;","/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/User-details/Marker.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/pages/Signup/Autocomplete.js",[],"/home/adrian/Escritorio/Proyectos/CaixabankApp/client/src/components/layout/Footer/Footer.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":21,"nodeType":"150","messageId":"151","endLine":1,"endColumn":27},{"ruleId":"148","severity":1,"message":"152","line":1,"column":29,"nodeType":"150","messageId":"151","endLine":1,"endColumn":38},{"ruleId":"148","severity":1,"message":"153","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":18},{"ruleId":"148","severity":1,"message":"154","line":2,"column":20,"nodeType":"150","messageId":"151","endLine":2,"endColumn":29},{"ruleId":"148","severity":1,"message":"155","line":12,"column":8,"nodeType":"150","messageId":"151","endLine":12,"endColumn":23},{"ruleId":"148","severity":1,"message":"156","line":1,"column":26,"nodeType":"150","messageId":"151","endLine":1,"endColumn":29},{"ruleId":"148","severity":1,"message":"156","line":2,"column":29,"nodeType":"150","messageId":"151","endLine":2,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":39,"column":8,"nodeType":"159","endLine":39,"endColumn":21,"suggestions":"160"},{"ruleId":"148","severity":1,"message":"161","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":202,"column":41,"nodeType":"164","endLine":202,"endColumn":119},{"ruleId":"148","severity":1,"message":"149","line":2,"column":31,"nodeType":"150","messageId":"151","endLine":2,"endColumn":37},{"ruleId":"148","severity":1,"message":"165","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"148","severity":1,"message":"166","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":37,"column":9,"nodeType":"169","messageId":"170","endLine":37,"endColumn":50},{"ruleId":"171","severity":1,"message":"172","line":6,"column":5,"nodeType":"173","messageId":"174","endLine":8,"endColumn":6},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Accordion' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'SituationFilter' is defined but never used.","'Row' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleListen'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'LocationSearchInput' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'Dictaphone' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},"Update the dependencies array to be: [handleListen, isListening]",{"range":"180","text":"181"},[1160,1173],"[handleListen, isListening]"]